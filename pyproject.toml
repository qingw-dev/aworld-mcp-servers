[project]
name = "aworld-mcp-servers"
version = "0.1.0"
description = "Multi-service AI platform with RAG, agents, and browser automation"
authors = [{name = "qingw-dev", email = "qintong.wqt@antgroup.com"}]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # "aworld==0.2.4",
    # "marker-pdf==1.7.5",
    "aiofiles==24.1.0",
    "altair==5.5.0",
    "anthropic",
    "anyio==4.9.0",
    "arxiv==2.2.0",
    "backoff==2.2.1",
    "beautifulsoup4==4.13.4",
    "certifi>=2024.8.30",
    "chardet>=5.2.0",
    "chess>=1.11.2",
    "click==8.2.1",
    "fastapi==0.115.8",
    "flask>=3.1.1",
    "google-ai-generativelanguage==0.6.18",
    "google-api-core==2.25.1",
    "google-auth==2.40.3",
    "google-genai==1.21.1",
    "html2text>=2025.4.15",
    "httpx==0.28.1",
    "huggingface-hub==0.33.0",
    "jinja2==3.1.6",
    "kubernetes==32.0.1",
    "langchain==0.3.25",
    "langchain-anthropic",
    "langchain-core==0.3.64",
    "langchain-deepseek==0.1.3",
    "langchain-google-genai==2.1.5",
    "langchain-ollama==0.3.3",
    "langchain-openai==0.3.21",
    "langchain-text-splitters==0.3.8",
    "langsmith==0.3.45",
    "lxml==5.4.0",
    "mammoth>=1.9.1",
    "markdown>=3.8.2",
    "mcp",
    "mem0ai==0.1.111",
    "numpy==2.3.1",
    "ollama==0.5.1",
    "openai",
    "opencv-python==4.11.0.86",
    "oss2",
    "pandas==2.3.0",
    "patchright==1.52.5",
    "pathvalidate>=3.3.1",
    "pdfminer-six",
    "pillow==10.4.0",
    "playwright==1.52.0",
    "puremagic>=1.30",
    "pydantic>=2.9.2",
    "pydantic-settings",
    "pydub>=0.25.1",
    "pygame>=2.6.1",
    "pytesseract>=0.3.13",
    "python-docx>=1.2.0",
    "python-dotenv==1.0.1",
    "python-magic>=0.4.27",
    "python-pptx>=1.0.2",
    "qdrant-client==1.14.3",
    "requests==2.32.4",
    "scikit-learn==1.7.0",
    "selenium==4.33.0",
    "sentence-transformers==4.1.0",
    "smolagents>=1.19.0",
    "speechrecognition>=3.14.3",
    "starlette",
    "streamlit==1.46.0",
    "tabulate",
    "tiktoken==0.9.0",
    "torch==2.7.1",
    "transformers==4.52.4",
    "typer==0.16.0",
    "waybackpy>=3.0.6",
    "wikipedia>=1.4.0",
    "youtube-transcript-api>=1.1.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.11.2",
    "mypy>=1.8.0",
    "pre-commit>=4.2.0",
]
browser = [
    # "browser-use==0.3.2",  # Uncomment when ready
]
ai = [
    # "faiss-cpu==1.11.0",  # Uncomment when ready
]

[project.scripts]
aworld-server = "src.main:main"
aworld-fastapi = "src.main_fastapi:main"
gaia-runner = "src.gaia.runner:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
include = [
    "src/**/*.py",
    "src/**/*.yml",
    "src/**/*.yaml",
    "src/**/*.json",
    "src/**/*.md",
]
exclude = [
    "src/**/__pycache__",
    "src/**/*.pyc",
    "src/**/.*",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[[tool.uv.index]]
url = "https://mirrors.aliyun.com/pypi/simple/"
default = true

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m `not slow`')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
